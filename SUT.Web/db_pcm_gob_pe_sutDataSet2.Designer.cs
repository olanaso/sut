//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Sut.Web {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("db_pcm_gob_pe_sutDataSet2")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class db_pcm_gob_pe_sutDataSet2 : global::System.Data.DataSet {
        
        private IncentivosDataTable tableIncentivos;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public db_pcm_gob_pe_sutDataSet2() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected db_pcm_gob_pe_sutDataSet2(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Incentivos"] != null)) {
                    base.Tables.Add(new IncentivosDataTable(ds.Tables["Incentivos"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public IncentivosDataTable Incentivos {
            get {
                return this.tableIncentivos;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            db_pcm_gob_pe_sutDataSet2 cln = ((db_pcm_gob_pe_sutDataSet2)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Incentivos"] != null)) {
                    base.Tables.Add(new IncentivosDataTable(ds.Tables["Incentivos"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableIncentivos = ((IncentivosDataTable)(base.Tables["Incentivos"]));
            if ((initTable == true)) {
                if ((this.tableIncentivos != null)) {
                    this.tableIncentivos.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "db_pcm_gob_pe_sutDataSet2";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/db_pcm_gob_pe_sutDataSet2.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableIncentivos = new IncentivosDataTable();
            base.Tables.Add(this.tableIncentivos);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeIncentivos() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            db_pcm_gob_pe_sutDataSet2 ds = new db_pcm_gob_pe_sutDataSet2();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void IncentivosRowChangeEventHandler(object sender, IncentivosRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class IncentivosDataTable : global::System.Data.TypedTableBase<IncentivosRow> {
            
            private global::System.Data.DataColumn columnIncentivosId;
            
            private global::System.Data.DataColumn columnNumExpediente;
            
            private global::System.Data.DataColumn columnFec_Ing_Sol;
            
            private global::System.Data.DataColumn columnArchivo_Fec_Ing_Sol;
            
            private global::System.Data.DataColumn columnNivelRiesgo;
            
            private global::System.Data.DataColumn columnFec_Emision_Cert_ITSE;
            
            private global::System.Data.DataColumn columnArchivo_Fec_Emision_Cert_ITSE;
            
            private global::System.Data.DataColumn columnFec_Notificacion_Cert_ITSE;
            
            private global::System.Data.DataColumn columnArchivo_Fec_Notificacion_Cert_ITSE;
            
            private global::System.Data.DataColumn columnFec_Emision_Licencia_Funcionamiento;
            
            private global::System.Data.DataColumn columnArchivo_Fec_Emision_Licencia_Funcionamiento;
            
            private global::System.Data.DataColumn columnFec_Notificacion_Licencia_Funcionamiento;
            
            private global::System.Data.DataColumn columnArchivo_Fec_Notificacion_Licencia_Funcionamiento;
            
            private global::System.Data.DataColumn columnFec_Revocacion_Licencia_Funcionamiento;
            
            private global::System.Data.DataColumn columnCod_Acreditacion_Inspector_ITSE;
            
            private global::System.Data.DataColumn columnRenovacion_ITSE;
            
            private global::System.Data.DataColumn columnUserCreacion;
            
            private global::System.Data.DataColumn columnUserModificacion;
            
            private global::System.Data.DataColumn columnFecCreacion;
            
            private global::System.Data.DataColumn columnFecModificacion;
            
            private global::System.Data.DataColumn columnEntidadId;
            
            private global::System.Data.DataColumn columnEstado;
            
            private global::System.Data.DataColumn columnEstadoIngreso;
            
            private global::System.Data.DataColumn columnNumero_Revocacion_Licencia_Funcionamiento;
            
            private global::System.Data.DataColumn columndescripcionnivel;
            
            private global::System.Data.DataColumn columnNombreEntidad;
            
            private global::System.Data.DataColumn columndescripcionIngreso;
            
            private global::System.Data.DataColumn columnNumRUC;
            
            private global::System.Data.DataColumn columnActividadogironegocio;
            
            private global::System.Data.DataColumn columnGirocomplementario;
            
            private global::System.Data.DataColumn columnFuncion;
            
            private global::System.Data.DataColumn columnNumeral;
            
            private global::System.Data.DataColumn columnFec_Suspencion_ITSE_Subsanacion;
            
            private global::System.Data.DataColumn columnAcronimo;
            
            private global::System.Data.DataColumn columnFec_Suspencion_ITSE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IncentivosDataTable() {
                this.TableName = "Incentivos";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal IncentivosDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected IncentivosDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IncentivosIdColumn {
                get {
                    return this.columnIncentivosId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumExpedienteColumn {
                get {
                    return this.columnNumExpediente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Fec_Ing_SolColumn {
                get {
                    return this.columnFec_Ing_Sol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Archivo_Fec_Ing_SolColumn {
                get {
                    return this.columnArchivo_Fec_Ing_Sol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NivelRiesgoColumn {
                get {
                    return this.columnNivelRiesgo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Fec_Emision_Cert_ITSEColumn {
                get {
                    return this.columnFec_Emision_Cert_ITSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Archivo_Fec_Emision_Cert_ITSEColumn {
                get {
                    return this.columnArchivo_Fec_Emision_Cert_ITSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Fec_Notificacion_Cert_ITSEColumn {
                get {
                    return this.columnFec_Notificacion_Cert_ITSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Archivo_Fec_Notificacion_Cert_ITSEColumn {
                get {
                    return this.columnArchivo_Fec_Notificacion_Cert_ITSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Fec_Emision_Licencia_FuncionamientoColumn {
                get {
                    return this.columnFec_Emision_Licencia_Funcionamiento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Archivo_Fec_Emision_Licencia_FuncionamientoColumn {
                get {
                    return this.columnArchivo_Fec_Emision_Licencia_Funcionamiento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Fec_Notificacion_Licencia_FuncionamientoColumn {
                get {
                    return this.columnFec_Notificacion_Licencia_Funcionamiento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Archivo_Fec_Notificacion_Licencia_FuncionamientoColumn {
                get {
                    return this.columnArchivo_Fec_Notificacion_Licencia_Funcionamiento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Fec_Revocacion_Licencia_FuncionamientoColumn {
                get {
                    return this.columnFec_Revocacion_Licencia_Funcionamiento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Cod_Acreditacion_Inspector_ITSEColumn {
                get {
                    return this.columnCod_Acreditacion_Inspector_ITSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Renovacion_ITSEColumn {
                get {
                    return this.columnRenovacion_ITSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UserCreacionColumn {
                get {
                    return this.columnUserCreacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UserModificacionColumn {
                get {
                    return this.columnUserModificacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FecCreacionColumn {
                get {
                    return this.columnFecCreacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FecModificacionColumn {
                get {
                    return this.columnFecModificacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EntidadIdColumn {
                get {
                    return this.columnEntidadId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EstadoColumn {
                get {
                    return this.columnEstado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EstadoIngresoColumn {
                get {
                    return this.columnEstadoIngreso;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Numero_Revocacion_Licencia_FuncionamientoColumn {
                get {
                    return this.columnNumero_Revocacion_Licencia_Funcionamiento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn descripcionnivelColumn {
                get {
                    return this.columndescripcionnivel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NombreEntidadColumn {
                get {
                    return this.columnNombreEntidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn descripcionIngresoColumn {
                get {
                    return this.columndescripcionIngreso;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumRUCColumn {
                get {
                    return this.columnNumRUC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ActividadogironegocioColumn {
                get {
                    return this.columnActividadogironegocio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GirocomplementarioColumn {
                get {
                    return this.columnGirocomplementario;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FuncionColumn {
                get {
                    return this.columnFuncion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumeralColumn {
                get {
                    return this.columnNumeral;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Fec_Suspencion_ITSE_SubsanacionColumn {
                get {
                    return this.columnFec_Suspencion_ITSE_Subsanacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AcronimoColumn {
                get {
                    return this.columnAcronimo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Fec_Suspencion_ITSEColumn {
                get {
                    return this.columnFec_Suspencion_ITSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IncentivosRow this[int index] {
                get {
                    return ((IncentivosRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event IncentivosRowChangeEventHandler IncentivosRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event IncentivosRowChangeEventHandler IncentivosRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event IncentivosRowChangeEventHandler IncentivosRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event IncentivosRowChangeEventHandler IncentivosRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddIncentivosRow(IncentivosRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IncentivosRow AddIncentivosRow(
                        string NumExpediente, 
                        System.DateTime Fec_Ing_Sol, 
                        long Archivo_Fec_Ing_Sol, 
                        int NivelRiesgo, 
                        System.DateTime Fec_Emision_Cert_ITSE, 
                        long Archivo_Fec_Emision_Cert_ITSE, 
                        System.DateTime Fec_Notificacion_Cert_ITSE, 
                        long Archivo_Fec_Notificacion_Cert_ITSE, 
                        System.DateTime Fec_Emision_Licencia_Funcionamiento, 
                        long Archivo_Fec_Emision_Licencia_Funcionamiento, 
                        System.DateTime Fec_Notificacion_Licencia_Funcionamiento, 
                        long Archivo_Fec_Notificacion_Licencia_Funcionamiento, 
                        System.DateTime Fec_Revocacion_Licencia_Funcionamiento, 
                        string Cod_Acreditacion_Inspector_ITSE, 
                        System.DateTime Renovacion_ITSE, 
                        string UserCreacion, 
                        string UserModificacion, 
                        System.DateTime FecCreacion, 
                        System.DateTime FecModificacion, 
                        long EntidadId, 
                        int Estado, 
                        int EstadoIngreso, 
                        string Numero_Revocacion_Licencia_Funcionamiento, 
                        string descripcionnivel, 
                        string NombreEntidad, 
                        string descripcionIngreso, 
                        string NumRUC, 
                        string Actividadogironegocio, 
                        string Girocomplementario, 
                        string Funcion, 
                        string Numeral, 
                        string Fec_Suspencion_ITSE_Subsanacion, 
                        string Acronimo, 
                        string Fec_Suspencion_ITSE) {
                IncentivosRow rowIncentivosRow = ((IncentivosRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        NumExpediente,
                        Fec_Ing_Sol,
                        Archivo_Fec_Ing_Sol,
                        NivelRiesgo,
                        Fec_Emision_Cert_ITSE,
                        Archivo_Fec_Emision_Cert_ITSE,
                        Fec_Notificacion_Cert_ITSE,
                        Archivo_Fec_Notificacion_Cert_ITSE,
                        Fec_Emision_Licencia_Funcionamiento,
                        Archivo_Fec_Emision_Licencia_Funcionamiento,
                        Fec_Notificacion_Licencia_Funcionamiento,
                        Archivo_Fec_Notificacion_Licencia_Funcionamiento,
                        Fec_Revocacion_Licencia_Funcionamiento,
                        Cod_Acreditacion_Inspector_ITSE,
                        Renovacion_ITSE,
                        UserCreacion,
                        UserModificacion,
                        FecCreacion,
                        FecModificacion,
                        EntidadId,
                        Estado,
                        EstadoIngreso,
                        Numero_Revocacion_Licencia_Funcionamiento,
                        descripcionnivel,
                        NombreEntidad,
                        descripcionIngreso,
                        NumRUC,
                        Actividadogironegocio,
                        Girocomplementario,
                        Funcion,
                        Numeral,
                        Fec_Suspencion_ITSE_Subsanacion,
                        Acronimo,
                        Fec_Suspencion_ITSE};
                rowIncentivosRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowIncentivosRow);
                return rowIncentivosRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IncentivosRow FindByIncentivosId(long IncentivosId) {
                return ((IncentivosRow)(this.Rows.Find(new object[] {
                            IncentivosId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                IncentivosDataTable cln = ((IncentivosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new IncentivosDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnIncentivosId = base.Columns["IncentivosId"];
                this.columnNumExpediente = base.Columns["NumExpediente"];
                this.columnFec_Ing_Sol = base.Columns["Fec_Ing_Sol"];
                this.columnArchivo_Fec_Ing_Sol = base.Columns["Archivo_Fec_Ing_Sol"];
                this.columnNivelRiesgo = base.Columns["NivelRiesgo"];
                this.columnFec_Emision_Cert_ITSE = base.Columns["Fec_Emision_Cert_ITSE"];
                this.columnArchivo_Fec_Emision_Cert_ITSE = base.Columns["Archivo_Fec_Emision_Cert_ITSE"];
                this.columnFec_Notificacion_Cert_ITSE = base.Columns["Fec_Notificacion_Cert_ITSE"];
                this.columnArchivo_Fec_Notificacion_Cert_ITSE = base.Columns["Archivo_Fec_Notificacion_Cert_ITSE"];
                this.columnFec_Emision_Licencia_Funcionamiento = base.Columns["Fec_Emision_Licencia_Funcionamiento"];
                this.columnArchivo_Fec_Emision_Licencia_Funcionamiento = base.Columns["Archivo_Fec_Emision_Licencia_Funcionamiento"];
                this.columnFec_Notificacion_Licencia_Funcionamiento = base.Columns["Fec_Notificacion_Licencia_Funcionamiento"];
                this.columnArchivo_Fec_Notificacion_Licencia_Funcionamiento = base.Columns["Archivo_Fec_Notificacion_Licencia_Funcionamiento"];
                this.columnFec_Revocacion_Licencia_Funcionamiento = base.Columns["Fec_Revocacion_Licencia_Funcionamiento"];
                this.columnCod_Acreditacion_Inspector_ITSE = base.Columns["Cod_Acreditacion_Inspector_ITSE"];
                this.columnRenovacion_ITSE = base.Columns["Renovacion_ITSE"];
                this.columnUserCreacion = base.Columns["UserCreacion"];
                this.columnUserModificacion = base.Columns["UserModificacion"];
                this.columnFecCreacion = base.Columns["FecCreacion"];
                this.columnFecModificacion = base.Columns["FecModificacion"];
                this.columnEntidadId = base.Columns["EntidadId"];
                this.columnEstado = base.Columns["Estado"];
                this.columnEstadoIngreso = base.Columns["EstadoIngreso"];
                this.columnNumero_Revocacion_Licencia_Funcionamiento = base.Columns["Numero_Revocacion_Licencia_Funcionamiento"];
                this.columndescripcionnivel = base.Columns["descripcionnivel"];
                this.columnNombreEntidad = base.Columns["NombreEntidad"];
                this.columndescripcionIngreso = base.Columns["descripcionIngreso"];
                this.columnNumRUC = base.Columns["NumRUC"];
                this.columnActividadogironegocio = base.Columns["Actividadogironegocio"];
                this.columnGirocomplementario = base.Columns["Girocomplementario"];
                this.columnFuncion = base.Columns["Funcion"];
                this.columnNumeral = base.Columns["Numeral"];
                this.columnFec_Suspencion_ITSE_Subsanacion = base.Columns["Fec_Suspencion_ITSE_Subsanacion"];
                this.columnAcronimo = base.Columns["Acronimo"];
                this.columnFec_Suspencion_ITSE = base.Columns["Fec_Suspencion_ITSE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnIncentivosId = new global::System.Data.DataColumn("IncentivosId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncentivosId);
                this.columnNumExpediente = new global::System.Data.DataColumn("NumExpediente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumExpediente);
                this.columnFec_Ing_Sol = new global::System.Data.DataColumn("Fec_Ing_Sol", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFec_Ing_Sol);
                this.columnArchivo_Fec_Ing_Sol = new global::System.Data.DataColumn("Archivo_Fec_Ing_Sol", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchivo_Fec_Ing_Sol);
                this.columnNivelRiesgo = new global::System.Data.DataColumn("NivelRiesgo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNivelRiesgo);
                this.columnFec_Emision_Cert_ITSE = new global::System.Data.DataColumn("Fec_Emision_Cert_ITSE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFec_Emision_Cert_ITSE);
                this.columnArchivo_Fec_Emision_Cert_ITSE = new global::System.Data.DataColumn("Archivo_Fec_Emision_Cert_ITSE", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchivo_Fec_Emision_Cert_ITSE);
                this.columnFec_Notificacion_Cert_ITSE = new global::System.Data.DataColumn("Fec_Notificacion_Cert_ITSE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFec_Notificacion_Cert_ITSE);
                this.columnArchivo_Fec_Notificacion_Cert_ITSE = new global::System.Data.DataColumn("Archivo_Fec_Notificacion_Cert_ITSE", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchivo_Fec_Notificacion_Cert_ITSE);
                this.columnFec_Emision_Licencia_Funcionamiento = new global::System.Data.DataColumn("Fec_Emision_Licencia_Funcionamiento", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFec_Emision_Licencia_Funcionamiento);
                this.columnArchivo_Fec_Emision_Licencia_Funcionamiento = new global::System.Data.DataColumn("Archivo_Fec_Emision_Licencia_Funcionamiento", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchivo_Fec_Emision_Licencia_Funcionamiento);
                this.columnFec_Notificacion_Licencia_Funcionamiento = new global::System.Data.DataColumn("Fec_Notificacion_Licencia_Funcionamiento", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFec_Notificacion_Licencia_Funcionamiento);
                this.columnArchivo_Fec_Notificacion_Licencia_Funcionamiento = new global::System.Data.DataColumn("Archivo_Fec_Notificacion_Licencia_Funcionamiento", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchivo_Fec_Notificacion_Licencia_Funcionamiento);
                this.columnFec_Revocacion_Licencia_Funcionamiento = new global::System.Data.DataColumn("Fec_Revocacion_Licencia_Funcionamiento", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFec_Revocacion_Licencia_Funcionamiento);
                this.columnCod_Acreditacion_Inspector_ITSE = new global::System.Data.DataColumn("Cod_Acreditacion_Inspector_ITSE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_Acreditacion_Inspector_ITSE);
                this.columnRenovacion_ITSE = new global::System.Data.DataColumn("Renovacion_ITSE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRenovacion_ITSE);
                this.columnUserCreacion = new global::System.Data.DataColumn("UserCreacion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserCreacion);
                this.columnUserModificacion = new global::System.Data.DataColumn("UserModificacion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserModificacion);
                this.columnFecCreacion = new global::System.Data.DataColumn("FecCreacion", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecCreacion);
                this.columnFecModificacion = new global::System.Data.DataColumn("FecModificacion", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecModificacion);
                this.columnEntidadId = new global::System.Data.DataColumn("EntidadId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntidadId);
                this.columnEstado = new global::System.Data.DataColumn("Estado", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstado);
                this.columnEstadoIngreso = new global::System.Data.DataColumn("EstadoIngreso", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstadoIngreso);
                this.columnNumero_Revocacion_Licencia_Funcionamiento = new global::System.Data.DataColumn("Numero_Revocacion_Licencia_Funcionamiento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumero_Revocacion_Licencia_Funcionamiento);
                this.columndescripcionnivel = new global::System.Data.DataColumn("descripcionnivel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescripcionnivel);
                this.columnNombreEntidad = new global::System.Data.DataColumn("NombreEntidad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombreEntidad);
                this.columndescripcionIngreso = new global::System.Data.DataColumn("descripcionIngreso", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescripcionIngreso);
                this.columnNumRUC = new global::System.Data.DataColumn("NumRUC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumRUC);
                this.columnActividadogironegocio = new global::System.Data.DataColumn("Actividadogironegocio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActividadogironegocio);
                this.columnGirocomplementario = new global::System.Data.DataColumn("Girocomplementario", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGirocomplementario);
                this.columnFuncion = new global::System.Data.DataColumn("Funcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFuncion);
                this.columnNumeral = new global::System.Data.DataColumn("Numeral", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumeral);
                this.columnFec_Suspencion_ITSE_Subsanacion = new global::System.Data.DataColumn("Fec_Suspencion_ITSE_Subsanacion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFec_Suspencion_ITSE_Subsanacion);
                this.columnAcronimo = new global::System.Data.DataColumn("Acronimo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcronimo);
                this.columnFec_Suspencion_ITSE = new global::System.Data.DataColumn("Fec_Suspencion_ITSE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFec_Suspencion_ITSE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIncentivosId}, true));
                this.columnIncentivosId.AutoIncrement = true;
                this.columnIncentivosId.AutoIncrementSeed = -1;
                this.columnIncentivosId.AutoIncrementStep = -1;
                this.columnIncentivosId.AllowDBNull = false;
                this.columnIncentivosId.ReadOnly = true;
                this.columnIncentivosId.Unique = true;
                this.columnNumExpediente.MaxLength = 40;
                this.columnNivelRiesgo.AllowDBNull = false;
                this.columnCod_Acreditacion_Inspector_ITSE.MaxLength = 40;
                this.columnUserCreacion.MaxLength = 11;
                this.columnUserModificacion.MaxLength = 11;
                this.columnEntidadId.AllowDBNull = false;
                this.columnEstado.AllowDBNull = false;
                this.columnEstadoIngreso.AllowDBNull = false;
                this.columnNumero_Revocacion_Licencia_Funcionamiento.MaxLength = 40;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IncentivosRow NewIncentivosRow() {
                return ((IncentivosRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new IncentivosRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(IncentivosRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.IncentivosRowChanged != null)) {
                    this.IncentivosRowChanged(this, new IncentivosRowChangeEvent(((IncentivosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.IncentivosRowChanging != null)) {
                    this.IncentivosRowChanging(this, new IncentivosRowChangeEvent(((IncentivosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.IncentivosRowDeleted != null)) {
                    this.IncentivosRowDeleted(this, new IncentivosRowChangeEvent(((IncentivosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.IncentivosRowDeleting != null)) {
                    this.IncentivosRowDeleting(this, new IncentivosRowChangeEvent(((IncentivosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveIncentivosRow(IncentivosRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                db_pcm_gob_pe_sutDataSet2 ds = new db_pcm_gob_pe_sutDataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "IncentivosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class IncentivosRow : global::System.Data.DataRow {
            
            private IncentivosDataTable tableIncentivos;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal IncentivosRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableIncentivos = ((IncentivosDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long IncentivosId {
                get {
                    return ((long)(this[this.tableIncentivos.IncentivosIdColumn]));
                }
                set {
                    this[this.tableIncentivos.IncentivosIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NumExpediente {
                get {
                    try {
                        return ((string)(this[this.tableIncentivos.NumExpedienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'NumExpediente\' de la tabla \'Incentivos\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncentivos.NumExpedienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Fec_Ing_Sol {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableIncentivos.Fec_Ing_SolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Fec_Ing_Sol\' de la tabla \'Incentivos\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncentivos.Fec_Ing_SolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long Archivo_Fec_Ing_Sol {
                get {
                    try {
                        return ((long)(this[this.tableIncentivos.Archivo_Fec_Ing_SolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Archivo_Fec_Ing_Sol\' de la tabla \'Incentivos\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncentivos.Archivo_Fec_Ing_SolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int NivelRiesgo {
                get {
                    return ((int)(this[this.tableIncentivos.NivelRiesgoColumn]));
                }
                set {
                    this[this.tableIncentivos.NivelRiesgoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Fec_Emision_Cert_ITSE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableIncentivos.Fec_Emision_Cert_ITSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Fec_Emision_Cert_ITSE\' de la tabla \'Incentivos\' es DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableIncentivos.Fec_Emision_Cert_ITSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long Archivo_Fec_Emision_Cert_ITSE {
                get {
                    try {
                        return ((long)(this[this.tableIncentivos.Archivo_Fec_Emision_Cert_ITSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Archivo_Fec_Emision_Cert_ITSE\' de la tabla \'Incentivos\' e" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncentivos.Archivo_Fec_Emision_Cert_ITSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Fec_Notificacion_Cert_ITSE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableIncentivos.Fec_Notificacion_Cert_ITSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Fec_Notificacion_Cert_ITSE\' de la tabla \'Incentivos\' es D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableIncentivos.Fec_Notificacion_Cert_ITSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long Archivo_Fec_Notificacion_Cert_ITSE {
                get {
                    try {
                        return ((long)(this[this.tableIncentivos.Archivo_Fec_Notificacion_Cert_ITSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Archivo_Fec_Notificacion_Cert_ITSE\' de la tabla \'Incentiv" +
                                "os\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncentivos.Archivo_Fec_Notificacion_Cert_ITSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Fec_Emision_Licencia_Funcionamiento {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableIncentivos.Fec_Emision_Licencia_FuncionamientoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Fec_Emision_Licencia_Funcionamiento\' de la tabla \'Incenti" +
                                "vos\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncentivos.Fec_Emision_Licencia_FuncionamientoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long Archivo_Fec_Emision_Licencia_Funcionamiento {
                get {
                    try {
                        return ((long)(this[this.tableIncentivos.Archivo_Fec_Emision_Licencia_FuncionamientoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Archivo_Fec_Emision_Licencia_Funcionamiento\' de la tabla " +
                                "\'Incentivos\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncentivos.Archivo_Fec_Emision_Licencia_FuncionamientoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Fec_Notificacion_Licencia_Funcionamiento {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableIncentivos.Fec_Notificacion_Licencia_FuncionamientoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Fec_Notificacion_Licencia_Funcionamiento\' de la tabla \'In" +
                                "centivos\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncentivos.Fec_Notificacion_Licencia_FuncionamientoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long Archivo_Fec_Notificacion_Licencia_Funcionamiento {
                get {
                    try {
                        return ((long)(this[this.tableIncentivos.Archivo_Fec_Notificacion_Licencia_FuncionamientoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Archivo_Fec_Notificacion_Licencia_Funcionamiento\' de la t" +
                                "abla \'Incentivos\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncentivos.Archivo_Fec_Notificacion_Licencia_FuncionamientoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Fec_Revocacion_Licencia_Funcionamiento {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableIncentivos.Fec_Revocacion_Licencia_FuncionamientoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Fec_Revocacion_Licencia_Funcionamiento\' de la tabla \'Ince" +
                                "ntivos\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncentivos.Fec_Revocacion_Licencia_FuncionamientoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Cod_Acreditacion_Inspector_ITSE {
                get {
                    try {
                        return ((string)(this[this.tableIncentivos.Cod_Acreditacion_Inspector_ITSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Cod_Acreditacion_Inspector_ITSE\' de la tabla \'Incentivos\'" +
                                " es DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncentivos.Cod_Acreditacion_Inspector_ITSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Renovacion_ITSE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableIncentivos.Renovacion_ITSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Renovacion_ITSE\' de la tabla \'Incentivos\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncentivos.Renovacion_ITSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UserCreacion {
                get {
                    try {
                        return ((string)(this[this.tableIncentivos.UserCreacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'UserCreacion\' de la tabla \'Incentivos\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncentivos.UserCreacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UserModificacion {
                get {
                    try {
                        return ((string)(this[this.tableIncentivos.UserModificacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'UserModificacion\' de la tabla \'Incentivos\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncentivos.UserModificacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime FecCreacion {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableIncentivos.FecCreacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FecCreacion\' de la tabla \'Incentivos\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncentivos.FecCreacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime FecModificacion {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableIncentivos.FecModificacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FecModificacion\' de la tabla \'Incentivos\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncentivos.FecModificacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long EntidadId {
                get {
                    return ((long)(this[this.tableIncentivos.EntidadIdColumn]));
                }
                set {
                    this[this.tableIncentivos.EntidadIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Estado {
                get {
                    return ((int)(this[this.tableIncentivos.EstadoColumn]));
                }
                set {
                    this[this.tableIncentivos.EstadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int EstadoIngreso {
                get {
                    return ((int)(this[this.tableIncentivos.EstadoIngresoColumn]));
                }
                set {
                    this[this.tableIncentivos.EstadoIngresoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Numero_Revocacion_Licencia_Funcionamiento {
                get {
                    try {
                        return ((string)(this[this.tableIncentivos.Numero_Revocacion_Licencia_FuncionamientoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Numero_Revocacion_Licencia_Funcionamiento\' de la tabla \'I" +
                                "ncentivos\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncentivos.Numero_Revocacion_Licencia_FuncionamientoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string descripcionnivel {
                get {
                    try {
                        return ((string)(this[this.tableIncentivos.descripcionnivelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'descripcionnivel\' de la tabla \'Incentivos\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncentivos.descripcionnivelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NombreEntidad {
                get {
                    try {
                        return ((string)(this[this.tableIncentivos.NombreEntidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'NombreEntidad\' de la tabla \'Incentivos\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncentivos.NombreEntidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string descripcionIngreso {
                get {
                    try {
                        return ((string)(this[this.tableIncentivos.descripcionIngresoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'descripcionIngreso\' de la tabla \'Incentivos\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncentivos.descripcionIngresoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NumRUC {
                get {
                    try {
                        return ((string)(this[this.tableIncentivos.NumRUCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'NumRUC\' de la tabla \'Incentivos\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncentivos.NumRUCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Actividadogironegocio {
                get {
                    try {
                        return ((string)(this[this.tableIncentivos.ActividadogironegocioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Actividadogironegocio\' de la tabla \'Incentivos\' es DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableIncentivos.ActividadogironegocioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Girocomplementario {
                get {
                    try {
                        return ((string)(this[this.tableIncentivos.GirocomplementarioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Girocomplementario\' de la tabla \'Incentivos\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncentivos.GirocomplementarioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Funcion {
                get {
                    try {
                        return ((string)(this[this.tableIncentivos.FuncionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Funcion\' de la tabla \'Incentivos\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncentivos.FuncionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Numeral {
                get {
                    try {
                        return ((string)(this[this.tableIncentivos.NumeralColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Numeral\' de la tabla \'Incentivos\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncentivos.NumeralColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Fec_Suspencion_ITSE_Subsanacion {
                get {
                    try {
                        return ((string)(this[this.tableIncentivos.Fec_Suspencion_ITSE_SubsanacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Fec_Suspencion_ITSE_Subsanacion\' de la tabla \'Incentivos\'" +
                                " es DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncentivos.Fec_Suspencion_ITSE_SubsanacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Acronimo {
                get {
                    try {
                        return ((string)(this[this.tableIncentivos.AcronimoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Acronimo\' de la tabla \'Incentivos\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncentivos.AcronimoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Fec_Suspencion_ITSE {
                get {
                    try {
                        return ((string)(this[this.tableIncentivos.Fec_Suspencion_ITSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Fec_Suspencion_ITSE\' de la tabla \'Incentivos\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncentivos.Fec_Suspencion_ITSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNumExpedienteNull() {
                return this.IsNull(this.tableIncentivos.NumExpedienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNumExpedienteNull() {
                this[this.tableIncentivos.NumExpedienteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFec_Ing_SolNull() {
                return this.IsNull(this.tableIncentivos.Fec_Ing_SolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFec_Ing_SolNull() {
                this[this.tableIncentivos.Fec_Ing_SolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsArchivo_Fec_Ing_SolNull() {
                return this.IsNull(this.tableIncentivos.Archivo_Fec_Ing_SolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetArchivo_Fec_Ing_SolNull() {
                this[this.tableIncentivos.Archivo_Fec_Ing_SolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFec_Emision_Cert_ITSENull() {
                return this.IsNull(this.tableIncentivos.Fec_Emision_Cert_ITSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFec_Emision_Cert_ITSENull() {
                this[this.tableIncentivos.Fec_Emision_Cert_ITSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsArchivo_Fec_Emision_Cert_ITSENull() {
                return this.IsNull(this.tableIncentivos.Archivo_Fec_Emision_Cert_ITSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetArchivo_Fec_Emision_Cert_ITSENull() {
                this[this.tableIncentivos.Archivo_Fec_Emision_Cert_ITSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFec_Notificacion_Cert_ITSENull() {
                return this.IsNull(this.tableIncentivos.Fec_Notificacion_Cert_ITSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFec_Notificacion_Cert_ITSENull() {
                this[this.tableIncentivos.Fec_Notificacion_Cert_ITSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsArchivo_Fec_Notificacion_Cert_ITSENull() {
                return this.IsNull(this.tableIncentivos.Archivo_Fec_Notificacion_Cert_ITSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetArchivo_Fec_Notificacion_Cert_ITSENull() {
                this[this.tableIncentivos.Archivo_Fec_Notificacion_Cert_ITSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFec_Emision_Licencia_FuncionamientoNull() {
                return this.IsNull(this.tableIncentivos.Fec_Emision_Licencia_FuncionamientoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFec_Emision_Licencia_FuncionamientoNull() {
                this[this.tableIncentivos.Fec_Emision_Licencia_FuncionamientoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsArchivo_Fec_Emision_Licencia_FuncionamientoNull() {
                return this.IsNull(this.tableIncentivos.Archivo_Fec_Emision_Licencia_FuncionamientoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetArchivo_Fec_Emision_Licencia_FuncionamientoNull() {
                this[this.tableIncentivos.Archivo_Fec_Emision_Licencia_FuncionamientoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFec_Notificacion_Licencia_FuncionamientoNull() {
                return this.IsNull(this.tableIncentivos.Fec_Notificacion_Licencia_FuncionamientoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFec_Notificacion_Licencia_FuncionamientoNull() {
                this[this.tableIncentivos.Fec_Notificacion_Licencia_FuncionamientoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsArchivo_Fec_Notificacion_Licencia_FuncionamientoNull() {
                return this.IsNull(this.tableIncentivos.Archivo_Fec_Notificacion_Licencia_FuncionamientoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetArchivo_Fec_Notificacion_Licencia_FuncionamientoNull() {
                this[this.tableIncentivos.Archivo_Fec_Notificacion_Licencia_FuncionamientoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFec_Revocacion_Licencia_FuncionamientoNull() {
                return this.IsNull(this.tableIncentivos.Fec_Revocacion_Licencia_FuncionamientoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFec_Revocacion_Licencia_FuncionamientoNull() {
                this[this.tableIncentivos.Fec_Revocacion_Licencia_FuncionamientoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCod_Acreditacion_Inspector_ITSENull() {
                return this.IsNull(this.tableIncentivos.Cod_Acreditacion_Inspector_ITSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCod_Acreditacion_Inspector_ITSENull() {
                this[this.tableIncentivos.Cod_Acreditacion_Inspector_ITSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRenovacion_ITSENull() {
                return this.IsNull(this.tableIncentivos.Renovacion_ITSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRenovacion_ITSENull() {
                this[this.tableIncentivos.Renovacion_ITSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUserCreacionNull() {
                return this.IsNull(this.tableIncentivos.UserCreacionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUserCreacionNull() {
                this[this.tableIncentivos.UserCreacionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUserModificacionNull() {
                return this.IsNull(this.tableIncentivos.UserModificacionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUserModificacionNull() {
                this[this.tableIncentivos.UserModificacionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFecCreacionNull() {
                return this.IsNull(this.tableIncentivos.FecCreacionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFecCreacionNull() {
                this[this.tableIncentivos.FecCreacionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFecModificacionNull() {
                return this.IsNull(this.tableIncentivos.FecModificacionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFecModificacionNull() {
                this[this.tableIncentivos.FecModificacionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNumero_Revocacion_Licencia_FuncionamientoNull() {
                return this.IsNull(this.tableIncentivos.Numero_Revocacion_Licencia_FuncionamientoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNumero_Revocacion_Licencia_FuncionamientoNull() {
                this[this.tableIncentivos.Numero_Revocacion_Licencia_FuncionamientoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsdescripcionnivelNull() {
                return this.IsNull(this.tableIncentivos.descripcionnivelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetdescripcionnivelNull() {
                this[this.tableIncentivos.descripcionnivelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNombreEntidadNull() {
                return this.IsNull(this.tableIncentivos.NombreEntidadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNombreEntidadNull() {
                this[this.tableIncentivos.NombreEntidadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsdescripcionIngresoNull() {
                return this.IsNull(this.tableIncentivos.descripcionIngresoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetdescripcionIngresoNull() {
                this[this.tableIncentivos.descripcionIngresoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNumRUCNull() {
                return this.IsNull(this.tableIncentivos.NumRUCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNumRUCNull() {
                this[this.tableIncentivos.NumRUCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsActividadogironegocioNull() {
                return this.IsNull(this.tableIncentivos.ActividadogironegocioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetActividadogironegocioNull() {
                this[this.tableIncentivos.ActividadogironegocioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGirocomplementarioNull() {
                return this.IsNull(this.tableIncentivos.GirocomplementarioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGirocomplementarioNull() {
                this[this.tableIncentivos.GirocomplementarioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFuncionNull() {
                return this.IsNull(this.tableIncentivos.FuncionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFuncionNull() {
                this[this.tableIncentivos.FuncionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNumeralNull() {
                return this.IsNull(this.tableIncentivos.NumeralColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNumeralNull() {
                this[this.tableIncentivos.NumeralColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFec_Suspencion_ITSE_SubsanacionNull() {
                return this.IsNull(this.tableIncentivos.Fec_Suspencion_ITSE_SubsanacionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFec_Suspencion_ITSE_SubsanacionNull() {
                this[this.tableIncentivos.Fec_Suspencion_ITSE_SubsanacionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAcronimoNull() {
                return this.IsNull(this.tableIncentivos.AcronimoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAcronimoNull() {
                this[this.tableIncentivos.AcronimoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFec_Suspencion_ITSENull() {
                return this.IsNull(this.tableIncentivos.Fec_Suspencion_ITSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFec_Suspencion_ITSENull() {
                this[this.tableIncentivos.Fec_Suspencion_ITSEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class IncentivosRowChangeEvent : global::System.EventArgs {
            
            private IncentivosRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IncentivosRowChangeEvent(IncentivosRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IncentivosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Sut.Web.db_pcm_gob_pe_sutDataSet2TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class IncentivosTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public IncentivosTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Incentivos";
            tableMapping.ColumnMappings.Add("IncentivosId", "IncentivosId");
            tableMapping.ColumnMappings.Add("NumExpediente", "NumExpediente");
            tableMapping.ColumnMappings.Add("Fec_Ing_Sol", "Fec_Ing_Sol");
            tableMapping.ColumnMappings.Add("Archivo_Fec_Ing_Sol", "Archivo_Fec_Ing_Sol");
            tableMapping.ColumnMappings.Add("NivelRiesgo", "NivelRiesgo");
            tableMapping.ColumnMappings.Add("Fec_Emision_Cert_ITSE", "Fec_Emision_Cert_ITSE");
            tableMapping.ColumnMappings.Add("Archivo_Fec_Emision_Cert_ITSE", "Archivo_Fec_Emision_Cert_ITSE");
            tableMapping.ColumnMappings.Add("Fec_Notificacion_Cert_ITSE", "Fec_Notificacion_Cert_ITSE");
            tableMapping.ColumnMappings.Add("Archivo_Fec_Notificacion_Cert_ITSE", "Archivo_Fec_Notificacion_Cert_ITSE");
            tableMapping.ColumnMappings.Add("Fec_Emision_Licencia_Funcionamiento", "Fec_Emision_Licencia_Funcionamiento");
            tableMapping.ColumnMappings.Add("Archivo_Fec_Emision_Licencia_Funcionamiento", "Archivo_Fec_Emision_Licencia_Funcionamiento");
            tableMapping.ColumnMappings.Add("Fec_Notificacion_Licencia_Funcionamiento", "Fec_Notificacion_Licencia_Funcionamiento");
            tableMapping.ColumnMappings.Add("Archivo_Fec_Notificacion_Licencia_Funcionamiento", "Archivo_Fec_Notificacion_Licencia_Funcionamiento");
            tableMapping.ColumnMappings.Add("Fec_Revocacion_Licencia_Funcionamiento", "Fec_Revocacion_Licencia_Funcionamiento");
            tableMapping.ColumnMappings.Add("Cod_Acreditacion_Inspector_ITSE", "Cod_Acreditacion_Inspector_ITSE");
            tableMapping.ColumnMappings.Add("Renovacion_ITSE", "Renovacion_ITSE");
            tableMapping.ColumnMappings.Add("UserCreacion", "UserCreacion");
            tableMapping.ColumnMappings.Add("UserModificacion", "UserModificacion");
            tableMapping.ColumnMappings.Add("FecCreacion", "FecCreacion");
            tableMapping.ColumnMappings.Add("FecModificacion", "FecModificacion");
            tableMapping.ColumnMappings.Add("EntidadId", "EntidadId");
            tableMapping.ColumnMappings.Add("Estado", "Estado");
            tableMapping.ColumnMappings.Add("EstadoIngreso", "EstadoIngreso");
            tableMapping.ColumnMappings.Add("Numero_Revocacion_Licencia_Funcionamiento", "Numero_Revocacion_Licencia_Funcionamiento");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [sut].[Incentivos] WHERE (([IncentivosId] = @Original_IncentivosId))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IncentivosId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IncentivosId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [sut].[Incentivos] ([NumExpediente], [Fec_Ing_Sol], [Archivo_Fec_Ing_Sol], [NivelRiesgo], [Fec_Emision_Cert_ITSE], [Archivo_Fec_Emision_Cert_ITSE], [Fec_Notificacion_Cert_ITSE], [Archivo_Fec_Notificacion_Cert_ITSE], [Fec_Emision_Licencia_Funcionamiento], [Archivo_Fec_Emision_Licencia_Funcionamiento], [Fec_Notificacion_Licencia_Funcionamiento], [Archivo_Fec_Notificacion_Licencia_Funcionamiento], [Fec_Revocacion_Licencia_Funcionamiento], [Cod_Acreditacion_Inspector_ITSE], [Renovacion_ITSE], [UserCreacion], [UserModificacion], [FecCreacion], [FecModificacion], [EntidadId], [Estado], [EstadoIngreso], [Numero_Revocacion_Licencia_Funcionamiento]) VALUES (@NumExpediente, @Fec_Ing_Sol, @Archivo_Fec_Ing_Sol, @NivelRiesgo, @Fec_Emision_Cert_ITSE, @Archivo_Fec_Emision_Cert_ITSE, @Fec_Notificacion_Cert_ITSE, @Archivo_Fec_Notificacion_Cert_ITSE, @Fec_Emision_Licencia_Funcionamiento, @Archivo_Fec_Emision_Licencia_Funcionamiento, @Fec_Notificacion_Licencia_Funcionamiento, @Archivo_Fec_Notificacion_Licencia_Funcionamiento, @Fec_Revocacion_Licencia_Funcionamiento, @Cod_Acreditacion_Inspector_ITSE, @Renovacion_ITSE, @UserCreacion, @UserModificacion, @FecCreacion, @FecModificacion, @EntidadId, @Estado, @EstadoIngreso, @Numero_Revocacion_Licencia_Funcionamiento)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumExpediente", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumExpediente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fec_Ing_Sol", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_Ing_Sol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Archivo_Fec_Ing_Sol", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Archivo_Fec_Ing_Sol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NivelRiesgo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NivelRiesgo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fec_Emision_Cert_ITSE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_Emision_Cert_ITSE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Archivo_Fec_Emision_Cert_ITSE", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Archivo_Fec_Emision_Cert_ITSE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fec_Notificacion_Cert_ITSE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_Notificacion_Cert_ITSE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Archivo_Fec_Notificacion_Cert_ITSE", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Archivo_Fec_Notificacion_Cert_ITSE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fec_Emision_Licencia_Funcionamiento", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_Emision_Licencia_Funcionamiento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Archivo_Fec_Emision_Licencia_Funcionamiento", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Archivo_Fec_Emision_Licencia_Funcionamiento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fec_Notificacion_Licencia_Funcionamiento", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_Notificacion_Licencia_Funcionamiento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Archivo_Fec_Notificacion_Licencia_Funcionamiento", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Archivo_Fec_Notificacion_Licencia_Funcionamiento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fec_Revocacion_Licencia_Funcionamiento", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_Revocacion_Licencia_Funcionamiento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_Acreditacion_Inspector_ITSE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_Acreditacion_Inspector_ITSE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Renovacion_ITSE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Renovacion_ITSE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserCreacion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserCreacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserModificacion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserModificacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FecCreacion", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FecCreacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FecModificacion", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FecModificacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EntidadId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntidadId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Estado", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Estado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstadoIngreso", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstadoIngreso", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Numero_Revocacion_Licencia_Funcionamiento", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Numero_Revocacion_Licencia_Funcionamiento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [sut].[Incentivos] SET [NumExpediente] = @NumExpediente, [Fec_Ing_Sol] = @Fec_Ing_Sol, [Archivo_Fec_Ing_Sol] = @Archivo_Fec_Ing_Sol, [NivelRiesgo] = @NivelRiesgo, [Fec_Emision_Cert_ITSE] = @Fec_Emision_Cert_ITSE, [Archivo_Fec_Emision_Cert_ITSE] = @Archivo_Fec_Emision_Cert_ITSE, [Fec_Notificacion_Cert_ITSE] = @Fec_Notificacion_Cert_ITSE, [Archivo_Fec_Notificacion_Cert_ITSE] = @Archivo_Fec_Notificacion_Cert_ITSE, [Fec_Emision_Licencia_Funcionamiento] = @Fec_Emision_Licencia_Funcionamiento, [Archivo_Fec_Emision_Licencia_Funcionamiento] = @Archivo_Fec_Emision_Licencia_Funcionamiento, [Fec_Notificacion_Licencia_Funcionamiento] = @Fec_Notificacion_Licencia_Funcionamiento, [Archivo_Fec_Notificacion_Licencia_Funcionamiento] = @Archivo_Fec_Notificacion_Licencia_Funcionamiento, [Fec_Revocacion_Licencia_Funcionamiento] = @Fec_Revocacion_Licencia_Funcionamiento, [Cod_Acreditacion_Inspector_ITSE] = @Cod_Acreditacion_Inspector_ITSE, [Renovacion_ITSE] = @Renovacion_ITSE, [UserCreacion] = @UserCreacion, [UserModificacion] = @UserModificacion, [FecCreacion] = @FecCreacion, [FecModificacion] = @FecModificacion, [EntidadId] = @EntidadId, [Estado] = @Estado, [EstadoIngreso] = @EstadoIngreso, [Numero_Revocacion_Licencia_Funcionamiento] = @Numero_Revocacion_Licencia_Funcionamiento WHERE (([IncentivosId] = @Original_IncentivosId))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumExpediente", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumExpediente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fec_Ing_Sol", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_Ing_Sol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Archivo_Fec_Ing_Sol", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Archivo_Fec_Ing_Sol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NivelRiesgo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NivelRiesgo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fec_Emision_Cert_ITSE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_Emision_Cert_ITSE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Archivo_Fec_Emision_Cert_ITSE", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Archivo_Fec_Emision_Cert_ITSE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fec_Notificacion_Cert_ITSE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_Notificacion_Cert_ITSE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Archivo_Fec_Notificacion_Cert_ITSE", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Archivo_Fec_Notificacion_Cert_ITSE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fec_Emision_Licencia_Funcionamiento", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_Emision_Licencia_Funcionamiento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Archivo_Fec_Emision_Licencia_Funcionamiento", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Archivo_Fec_Emision_Licencia_Funcionamiento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fec_Notificacion_Licencia_Funcionamiento", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_Notificacion_Licencia_Funcionamiento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Archivo_Fec_Notificacion_Licencia_Funcionamiento", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Archivo_Fec_Notificacion_Licencia_Funcionamiento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fec_Revocacion_Licencia_Funcionamiento", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_Revocacion_Licencia_Funcionamiento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_Acreditacion_Inspector_ITSE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_Acreditacion_Inspector_ITSE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Renovacion_ITSE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Renovacion_ITSE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserCreacion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserCreacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserModificacion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserModificacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FecCreacion", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FecCreacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FecModificacion", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FecModificacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EntidadId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntidadId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Estado", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Estado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstadoIngreso", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstadoIngreso", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Numero_Revocacion_Licencia_Funcionamiento", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Numero_Revocacion_Licencia_Funcionamiento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IncentivosId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IncentivosId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["SUTEntities"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT IncentivosId, NumExpediente, Fec_Ing_Sol, Archivo_Fec_Ing_Sol, NivelRiesgo, Fec_Emision_Cert_ITSE, Archivo_Fec_Emision_Cert_ITSE, Fec_Notificacion_Cert_ITSE, Archivo_Fec_Notificacion_Cert_ITSE, Fec_Emision_Licencia_Funcionamiento, Archivo_Fec_Emision_Licencia_Funcionamiento, Fec_Notificacion_Licencia_Funcionamiento, Archivo_Fec_Notificacion_Licencia_Funcionamiento, Fec_Revocacion_Licencia_Funcionamiento, Cod_Acreditacion_Inspector_ITSE, Renovacion_ITSE, UserCreacion, UserModificacion, FecCreacion, FecModificacion, EntidadId, Estado, EstadoIngreso, Numero_Revocacion_Licencia_Funcionamiento FROM sut.Incentivos";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(db_pcm_gob_pe_sutDataSet2.IncentivosDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual db_pcm_gob_pe_sutDataSet2.IncentivosDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            db_pcm_gob_pe_sutDataSet2.IncentivosDataTable dataTable = new db_pcm_gob_pe_sutDataSet2.IncentivosDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(db_pcm_gob_pe_sutDataSet2.IncentivosDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(db_pcm_gob_pe_sutDataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "Incentivos");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_IncentivosId) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_IncentivosId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string NumExpediente, 
                    global::System.Nullable<global::System.DateTime> Fec_Ing_Sol, 
                    global::System.Nullable<long> Archivo_Fec_Ing_Sol, 
                    int NivelRiesgo, 
                    global::System.Nullable<global::System.DateTime> Fec_Emision_Cert_ITSE, 
                    global::System.Nullable<long> Archivo_Fec_Emision_Cert_ITSE, 
                    global::System.Nullable<global::System.DateTime> Fec_Notificacion_Cert_ITSE, 
                    global::System.Nullable<long> Archivo_Fec_Notificacion_Cert_ITSE, 
                    global::System.Nullable<global::System.DateTime> Fec_Emision_Licencia_Funcionamiento, 
                    global::System.Nullable<long> Archivo_Fec_Emision_Licencia_Funcionamiento, 
                    global::System.Nullable<global::System.DateTime> Fec_Notificacion_Licencia_Funcionamiento, 
                    global::System.Nullable<long> Archivo_Fec_Notificacion_Licencia_Funcionamiento, 
                    global::System.Nullable<global::System.DateTime> Fec_Revocacion_Licencia_Funcionamiento, 
                    string Cod_Acreditacion_Inspector_ITSE, 
                    global::System.Nullable<global::System.DateTime> Renovacion_ITSE, 
                    string UserCreacion, 
                    string UserModificacion, 
                    global::System.Nullable<global::System.DateTime> FecCreacion, 
                    global::System.Nullable<global::System.DateTime> FecModificacion, 
                    long EntidadId, 
                    int Estado, 
                    int EstadoIngreso, 
                    string Numero_Revocacion_Licencia_Funcionamiento) {
            if ((NumExpediente == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(NumExpediente));
            }
            if ((Fec_Ing_Sol.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(Fec_Ing_Sol.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Archivo_Fec_Ing_Sol.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((long)(Archivo_Fec_Ing_Sol.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(NivelRiesgo));
            if ((Fec_Emision_Cert_ITSE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(Fec_Emision_Cert_ITSE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Archivo_Fec_Emision_Cert_ITSE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((long)(Archivo_Fec_Emision_Cert_ITSE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Fec_Notificacion_Cert_ITSE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(Fec_Notificacion_Cert_ITSE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Archivo_Fec_Notificacion_Cert_ITSE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((long)(Archivo_Fec_Notificacion_Cert_ITSE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Fec_Emision_Licencia_Funcionamiento.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(Fec_Emision_Licencia_Funcionamiento.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Archivo_Fec_Emision_Licencia_Funcionamiento.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((long)(Archivo_Fec_Emision_Licencia_Funcionamiento.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Fec_Notificacion_Licencia_Funcionamiento.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(Fec_Notificacion_Licencia_Funcionamiento.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Archivo_Fec_Notificacion_Licencia_Funcionamiento.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((long)(Archivo_Fec_Notificacion_Licencia_Funcionamiento.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Fec_Revocacion_Licencia_Funcionamiento.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(Fec_Revocacion_Licencia_Funcionamiento.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Cod_Acreditacion_Inspector_ITSE == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Cod_Acreditacion_Inspector_ITSE));
            }
            if ((Renovacion_ITSE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(Renovacion_ITSE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((UserCreacion == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(UserCreacion));
            }
            if ((UserModificacion == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(UserModificacion));
            }
            if ((FecCreacion.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((System.DateTime)(FecCreacion.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((FecModificacion.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((System.DateTime)(FecModificacion.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[19].Value = ((long)(EntidadId));
            this.Adapter.InsertCommand.Parameters[20].Value = ((int)(Estado));
            this.Adapter.InsertCommand.Parameters[21].Value = ((int)(EstadoIngreso));
            if ((Numero_Revocacion_Licencia_Funcionamiento == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(Numero_Revocacion_Licencia_Funcionamiento));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string NumExpediente, 
                    global::System.Nullable<global::System.DateTime> Fec_Ing_Sol, 
                    global::System.Nullable<long> Archivo_Fec_Ing_Sol, 
                    int NivelRiesgo, 
                    global::System.Nullable<global::System.DateTime> Fec_Emision_Cert_ITSE, 
                    global::System.Nullable<long> Archivo_Fec_Emision_Cert_ITSE, 
                    global::System.Nullable<global::System.DateTime> Fec_Notificacion_Cert_ITSE, 
                    global::System.Nullable<long> Archivo_Fec_Notificacion_Cert_ITSE, 
                    global::System.Nullable<global::System.DateTime> Fec_Emision_Licencia_Funcionamiento, 
                    global::System.Nullable<long> Archivo_Fec_Emision_Licencia_Funcionamiento, 
                    global::System.Nullable<global::System.DateTime> Fec_Notificacion_Licencia_Funcionamiento, 
                    global::System.Nullable<long> Archivo_Fec_Notificacion_Licencia_Funcionamiento, 
                    global::System.Nullable<global::System.DateTime> Fec_Revocacion_Licencia_Funcionamiento, 
                    string Cod_Acreditacion_Inspector_ITSE, 
                    global::System.Nullable<global::System.DateTime> Renovacion_ITSE, 
                    string UserCreacion, 
                    string UserModificacion, 
                    global::System.Nullable<global::System.DateTime> FecCreacion, 
                    global::System.Nullable<global::System.DateTime> FecModificacion, 
                    long EntidadId, 
                    int Estado, 
                    int EstadoIngreso, 
                    string Numero_Revocacion_Licencia_Funcionamiento, 
                    long Original_IncentivosId) {
            if ((NumExpediente == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(NumExpediente));
            }
            if ((Fec_Ing_Sol.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(Fec_Ing_Sol.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Archivo_Fec_Ing_Sol.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(Archivo_Fec_Ing_Sol.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(NivelRiesgo));
            if ((Fec_Emision_Cert_ITSE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Fec_Emision_Cert_ITSE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Archivo_Fec_Emision_Cert_ITSE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((long)(Archivo_Fec_Emision_Cert_ITSE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Fec_Notificacion_Cert_ITSE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Fec_Notificacion_Cert_ITSE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Archivo_Fec_Notificacion_Cert_ITSE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(Archivo_Fec_Notificacion_Cert_ITSE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Fec_Emision_Licencia_Funcionamiento.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Fec_Emision_Licencia_Funcionamiento.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Archivo_Fec_Emision_Licencia_Funcionamiento.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((long)(Archivo_Fec_Emision_Licencia_Funcionamiento.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Fec_Notificacion_Licencia_Funcionamiento.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Fec_Notificacion_Licencia_Funcionamiento.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Archivo_Fec_Notificacion_Licencia_Funcionamiento.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((long)(Archivo_Fec_Notificacion_Licencia_Funcionamiento.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Fec_Revocacion_Licencia_Funcionamiento.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Fec_Revocacion_Licencia_Funcionamiento.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Cod_Acreditacion_Inspector_ITSE == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Cod_Acreditacion_Inspector_ITSE));
            }
            if ((Renovacion_ITSE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Renovacion_ITSE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((UserCreacion == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(UserCreacion));
            }
            if ((UserModificacion == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(UserModificacion));
            }
            if ((FecCreacion.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(FecCreacion.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((FecModificacion.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(FecModificacion.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((long)(EntidadId));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Estado));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(EstadoIngreso));
            if ((Numero_Revocacion_Licencia_Funcionamiento == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Numero_Revocacion_Licencia_Funcionamiento));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((long)(Original_IncentivosId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private IncentivosTableAdapter _incentivosTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public IncentivosTableAdapter IncentivosTableAdapter {
            get {
                return this._incentivosTableAdapter;
            }
            set {
                this._incentivosTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._incentivosTableAdapter != null) 
                            && (this._incentivosTableAdapter.Connection != null))) {
                    return this._incentivosTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._incentivosTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(db_pcm_gob_pe_sutDataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._incentivosTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Incentivos.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._incentivosTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(db_pcm_gob_pe_sutDataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._incentivosTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Incentivos.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._incentivosTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(db_pcm_gob_pe_sutDataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._incentivosTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Incentivos.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._incentivosTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(db_pcm_gob_pe_sutDataSet2 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._incentivosTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._incentivosTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi" +
                        "sma cadena de conexión.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda" +
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co" +
                        "n las transacciones o el estado actual no permite que comience la transacción.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._incentivosTableAdapter != null)) {
                    revertConnections.Add(this._incentivosTableAdapter, this._incentivosTableAdapter.Connection);
                    this._incentivosTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._incentivosTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._incentivosTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._incentivosTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._incentivosTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._incentivosTableAdapter != null)) {
                    this._incentivosTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._incentivosTableAdapter]));
                    this._incentivosTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591