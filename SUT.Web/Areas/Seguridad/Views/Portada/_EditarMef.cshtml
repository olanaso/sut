 
@using Sut.Entities
@model Sut.Entities.TablaAsme
<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            @*<button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>*@
            <h4 class="modal-title">Enviar Sustento al Mef </h4>
        </div>
        <div class="modal-body form-horizontal">
            @using (Html.BeginForm("", "", FormMethod.Get, new { @id = "form-editar-autorizacion" }))
            {
                @Html.HiddenFor(model => model.TablaAsmeId) 
                @Html.HiddenFor(model => model.ArchivoAdjuntoId)

                <div class="form-group">
                    <label class="control-label col-sm-3 col-xs-12">Respuesta</label>
                    <div class="col-sm-9 col-xs-12">
                        @Html.TextAreaFor(model => model.DescripcionRespuesa, new { @class = "form-control input-sm" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-sm-3 col-xs-12">Publicar </label>
                    <div class="col-sm-9 col-xs-12">
                        @Html.DropDownListFor(model => model.AutorizacionMEF, ViewBag.publicar as List<SelectListItem>, new { @class = "form-control input-sm", @readonly = true })
                    </div>
                </div>

            }
            @using (Html.BeginForm("", "", FormMethod.Post, new { @id = "form-archivo-adjunto", @enctype = "multipart/form-data" }))
            {
               
                <div class="form-group">
                    <label class="control-label col-sm-3 col-xs-12">Respuesta</label>
                    <div class="col-sm-9 col-xs-12">
                        @Html.HiddenFor(model => model.ArchivoAdjuntoId)
                        <div class="col-sm-12 col-xs-12 file-list @MvcHtmlString.Create(Model.ArchivoAdjunto != null ? "" : "file-empty")">
                            <ul>
                                <li>
                                    <span class="text">
                                        <i class="fa fa-file"></i>
                                        <a href="@MvcHtmlString.Create(Model.ArchivoAdjunto != null ? @Url.Content(string.Format("~/General/Adjunto/Descargar/{0}", Model.ArchivoAdjunto.ArchivoAdjuntoId)) : "")" target="_blank">
                                            @MvcHtmlString.Create(Model.ArchivoAdjunto != null ? Model.ArchivoAdjunto.NombreArchivo : "")
                                        </a>
                                    </span>
                                    <div class="tools">
                                        <i class="fa fa-remove"></i>
                                    </div>
                                </li>
                            </ul>
                            @Html.TextBox("PostedFile", "", new { @type = "file", @class = "form-control" })
                        </div>
                    </div>
                </div>
                 
            }
        </div>
        <div id="msgEditar"></div>
        <div class="modal-footer">
            <button type="button" class="btn btn-success btn-sm" onclick="sut.portada.enviarautorizacion()"><i class="fa fa-save"></i> Enviar </button>
            <button type="button" class="btn btn-danger btn-sm" data-dismiss="modal"><i class="fa fa-close"></i> Cancelar</button>
        </div>
    </div>
</div>
<div class="modal fade" id="modal-ventana-editar">
    <div id="ventana-container-editar">
    </div>
</div> 

<script>
    $(function () { 

        sut.control.uploadfile('form-archivo-adjunto');
         
        debugger;
        $(document).ready(function () {
            document.getElementById("PostedFile").setAttribute('accept', 'application/pdf');
        })
        debugger;
        var model = $('#form-editar-autorizacion').serialize();
        debugger;
        $('#form-editar-autorizacion').validate({
            errorPlacement: function (error, element) {
                debugger;
                if (element.parent('div.input-group').length > 0) {
                    error.insertAfter(element.parent('div.input-group'));
                } else {
                    error.insertAfter(element);
                }
            }, 
            messages: {

            }
        });
    });
 
</script>
