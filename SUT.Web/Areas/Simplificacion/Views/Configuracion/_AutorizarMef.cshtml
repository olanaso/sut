 
@using Sut.Entities
@model Sut.Entities.TablaAsme
<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            @*<button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>*@
            <h4 class="modal-title">Enviar Sustento al Mef</h4>
        </div>
        <div class="modal-body form-horizontal">
            @using (Html.BeginForm("", "", FormMethod.Get, new { @id = "form-editar-autorizacion" }))
            {
                @Html.HiddenFor(model => model.TablaAsmeId)
                @Html.HiddenFor(model => model.ArMotivoAdjuntoId)
                @Html.HiddenFor(model => model.ArchivoAdjuntoId)
                <div class="form-group">
                    <label class="control-label col-sm-3 col-xs-12" for="DescripcionSusustento">Sustento</label>
                    <div class="col-sm-9 col-xs-12">

                        @Html.TextAreaFor(model => model.DescripcionSusustento, new { @class = "form-control input-sm" })
                    </div>
                </div>
                if (Model.AutorizacionMEF == Autorizacionmef.Autorizar)
                {
                    <div class="form-group">
                        <label class="control-label col-sm-3 col-xs-12">Respuesta</label>
                        <div class="col-sm-9 col-xs-12">
                            @Html.TextAreaFor(model => model.DescripcionRespuesa, new { @class = "form-control input-sm", @readonly = true })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-sm-3 col-xs-12">Estado </label>
                        <div class="col-sm-9 col-xs-12">
                            <div>
                                @Html.HiddenFor(model => model.AutorizacionMEF)
                                @{
                                    string calificacion = string.Empty;
                                    List<SelectListItem> lstCalificacion = ViewBag.publicar as List<SelectListItem>;
                                    calificacion = lstCalificacion.First(x => x.Value == ((short)Model.AutorizacionMEF).ToString()).Text;
                                }
                                @Html.TextBox("NombreCalificacion", calificacion, new { @class = "form-control", @readonly = true })
                            </div> 
                        </div>
                    </div>
                }
                if (Model.AutorizacionMEF == Autorizacionmef.NoAutorizar)
                {
                    <div class="form-group">
                        <label class="control-label col-sm-3 col-xs-12">Respuesta</label>
                        <div class="col-sm-9 col-xs-12">
                            @Html.TextAreaFor(model => model.DescripcionRespuesa, new { @class = "form-control input-sm", @readonly = true })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-sm-3 col-xs-12">Estado </label>
                        <div class="col-sm-9 col-xs-12">
                            @Html.HiddenFor(model => model.AutorizacionMEF)
                            @{
                                string calificacion = string.Empty;
                                List<SelectListItem> lstCalificacion = ViewBag.publicar as List<SelectListItem>;
                                calificacion = lstCalificacion.First(x => x.Value == ((short)Model.AutorizacionMEF).ToString()).Text;
                            }
                            @Html.TextBox("NombreCalificacion", calificacion, new { @class = "form-control", @readonly = true })
                        </div>
                    </div>
                }

            }
            @using (Html.BeginForm("", "", FormMethod.Post, new { @id = "form-armotivo-adjunto", @enctype = "multipart/form-data" }))
            {
                <div class="form-group">
                    <label class="control-label col-sm-3 col-xs-12">Sustento</label>
                    <div class="col-sm-9 col-xs-12">
                        @Html.HiddenFor(model => model.ArMotivoAdjuntoId)
                        <div class="col-sm-12 col-xs-12 file-list @MvcHtmlString.Create(Model.ArMotivoAdjunto != null ? "" : "file-empty")">
                            <ul>
                                <li>
                                    <span class="text">
                                        <i class="fa fa-file"></i>
                                        <a href="@MvcHtmlString.Create(Model.ArMotivoAdjunto != null ? @Url.Content(string.Format("~/General/MotivoAdjunto/Descargar/{0}", Model.ArMotivoAdjunto.ArMotivoAdjuntoId)) : "")" target="_blank">
                                            @MvcHtmlString.Create(Model.ArMotivoAdjunto != null ? Model.ArMotivoAdjunto.NombreArchivo : "")
                                        </a>
                                    </span>
                                    @if (Model.AutorizacionMEF != Autorizacionmef.Autorizar && Model.AutorizacionMEF != Autorizacionmef.Enviar) {
                                    <div class="tools">
                                        <i class="fa fa-remove"></i>
                                    </div>
                                    }
                                </li>
                            </ul>
                            @Html.TextBox("PostedFile", "", new { @type = "file", @class = "form-control" })
                        </div>
                    </div>
                </div>
            }
            @if(Model.ArchivoAdjuntoId != null && Model.ArchivoAdjuntoId != 0)
            {
            <div class="form-group">
                <label class="control-label col-sm-3 col-xs-12">Respuesta</label>
                <div class="col-sm-9 col-xs-12">
                    @Html.HiddenFor(model => model.ArchivoAdjuntoId)
                    <div class="col-sm-12 col-xs-12 file-list @MvcHtmlString.Create(Model.ArchivoAdjunto != null ? "" : "file-empty")">
                        <ul>
                            <li>
                                <span class="text">
                                    <i class="fa fa-file"></i>
                                    <a href="@MvcHtmlString.Create(Model.ArchivoAdjunto != null ? @Url.Content(string.Format("~/General/Adjunto/Descargar/{0}", Model.ArchivoAdjunto.ArchivoAdjuntoId)) : "")" target="_blank">
                                        @MvcHtmlString.Create(Model.ArchivoAdjunto != null ? Model.ArchivoAdjunto.NombreArchivo : "")
                                    </a>
                                </span> 
                            </li>
                        </ul>
                        @Html.TextBox("PostedFile", "", new { @type = "file", @class = "form-control" })
                    </div>
                </div>
            </div>
            }
        </div>
        <div id="msgEditar"></div>
        <div class="modal-footer">
            @if (Model.AutorizacionMEF != Autorizacionmef.Autorizar && Model.AutorizacionMEF != Autorizacionmef.Enviar)
            {
                <button type="button" class="btn btn-success btn-sm" onclick="sut.Resumen.enviarautorizacion()"><i class="fa fa-save"></i> Enviar </button>
            }

            <button type="button" class="btn btn-danger btn-sm" data-dismiss="modal"><i class="fa fa-close"></i> Cancelar</button>
        </div>
    </div>
</div>
<div class="modal fade" id="modal-ventana-editar">
    <div id="ventana-container-editar">
    </div>
</div> 

<script>
    $(function () { 

        sut.control.uploadfilemotivo('form-armotivo-adjunto');
        debugger;
        $(document).ready(function () {
            document.getElementById("PostedFile").setAttribute('accept', 'application/pdf');
        })
         
        debugger;
        var model = $('#form-editar-autorizacion').serialize();
        debugger;
        $('#form-editar-autorizacion').validate({
            errorPlacement: function (error, element) {
                debugger;
                if (element.parent('div.input-group').length > 0) {
                    error.insertAfter(element.parent('div.input-group'));
                } else {
                    error.insertAfter(element);
                }
            }, 
            messages: {

            }
        });
    });
 
</script>
